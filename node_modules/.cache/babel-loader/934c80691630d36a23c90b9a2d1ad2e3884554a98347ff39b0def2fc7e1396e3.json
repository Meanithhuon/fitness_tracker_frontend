{"ast":null,"code":"var _jsxFileName = \"/Users/claytonc/Desktop/Coding_Stuff/Bootcamp/Art_Collector copy/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// const baseURL = 'https://strangers-things.herokuapp.com/api/2209-FTB-MT-WEB-PT'\n\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async () => {\n    try {\n      fetch('https://strangers-things.herokuapp.com/api/2209-FTB-MT-WEB-PT/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: {\n              username\n            },\n            password: {\n              password\n            }\n          }\n        })\n      }).then(response.json()).then(result => {\n        console.log(result);\n      });\n      console.log({\n        username,\n        password\n      });\n\n      // const response = await fetch(`${baseURL}/users/register`, {\n      //       method: \"POST\",\n      //       headers: {\n      //         'Content-Type': 'application/json',\n      //       },\n      //       body: JSON.stringify({\n      //         user: {\n      //           username: {username},\n      //           password: {password}\n      //         }\n      //       })\n      //     })\n      //     const result = await response.json();\n      //     return result;\n      //     console.log(\"TEST FOR SUBMIT BUTTON\")\n      //   } catch(error) {\n      //     console.log('error registering user')\n      //   }\n      //   if (result.success) {\n      //     alert(\"Registration Successful! Your token is: \" + result.data.token)\n      //   }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Registration:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Please enter your desired username:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 84\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => setUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Please enter your desired password:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Submit\"))));\n};\n_s(Register, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Register","username","setUsername","password","setPassword","handleSubmit","fetch","method","headers","body","JSON","stringify","user","then","response","json","result","console","log","error","event","preventDefault","target","value"],"sources":["/Users/claytonc/Desktop/Coding_Stuff/Bootcamp/Art_Collector copy/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// const baseURL = 'https://strangers-things.herokuapp.com/api/2209-FTB-MT-WEB-PT'\n\n\nconst Register = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async () => {\n        try {\n            fetch('https://strangers-things.herokuapp.com/api/2209-FTB-MT-WEB-PT/users/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    user: {\n                        username: {username},\n                        password: {password}\n                    }\n                })\n            }).then (response.json())\n              .then (result => {\n                console.log(result);\n              })\n            \n            console.log({username, password})\n\n            \n        // const response = await fetch(`${baseURL}/users/register`, {\n        //       method: \"POST\",\n        //       headers: {\n        //         'Content-Type': 'application/json',\n        //       },\n        //       body: JSON.stringify({\n        //         user: {\n        //           username: {username},\n        //           password: {password}\n        //         }\n        //       })\n        //     })\n        //     const result = await response.json();\n        //     return result;\n        //     console.log(\"TEST FOR SUBMIT BUTTON\")\n        //   } catch(error) {\n        //     console.log('error registering user')\n        //   }\n        //   if (result.success) {\n        //     alert(\"Registration Successful! Your token is: \" + result.data.token)\n        //   }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div id=\"home\">\n            \n            <h1>Registration:</h1>\n            \n            <div className='login-div'>\n                <form onSubmit={(event) => {event.preventDefault(); handleSubmit(); }}>\n                <label className='bold'>Please enter your desired username:</label><br></br>\n                <input type='text'onChange={(event) => setUsername(event.target.value)}/>\n                <br></br>\n                <br></br>\n\n                <label className='bold'>Please enter your desired password:</label>\n                <br></br>\n\n                <input type='password'onChange={(event) => setPassword(event.target.value)}/>\n                <br></br>\n                <br></br>\n\n                <button type='submit'>Submit</button>\n                </form>\n            </div>\n\n         </div>\n)\n}\n\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMM,YAAY,GAAG,YAAY;IAC7B,IAAI;MACAC,KAAK,CAAC,8EAA8E,EAAE;QAClFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,IAAI,EAAE;YACFX,QAAQ,EAAE;cAACA;YAAQ,CAAC;YACpBE,QAAQ,EAAE;cAACA;YAAQ;UACvB;QACJ,CAAC;MACL,CAAC,CAAC,CAACU,IAAI,CAAEC,QAAQ,CAACC,IAAI,EAAE,CAAC,CACtBF,IAAI,CAAEG,MAAM,IAAI;QACfC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACrB,CAAC,CAAC;MAEJC,OAAO,CAACC,GAAG,CAAC;QAACjB,QAAQ;QAAEE;MAAQ,CAAC,CAAC;;MAGrC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,oBACI;IAAK,EAAE,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAsB,eAEtB;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtB;IAAM,QAAQ,EAAGC,KAAK,IAAK;MAACA,KAAK,CAACC,cAAc,EAAE;MAAEhB,YAAY,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtE;IAAO,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yCAA4C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eAC5E;IAAO,IAAI,EAAC,MAAM;IAAA,QAAQ,EAAGe,KAAK,IAAKlB,WAAW,CAACkB,KAAK,CAACE,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eACzE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eAET;IAAO,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yCAA4C,eACnE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eAET;IAAO,IAAI,EAAC,UAAU;IAAA,QAAQ,EAAGH,KAAK,IAAKhB,WAAW,CAACgB,KAAK,CAACE,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAC7E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eAET;IAAQ,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAgB,CAC9B,CACL,CAEH;AAEf,CAAC;AAAA,GA5EKvB,QAAQ;AAAA,KAARA,QAAQ;AA8Ed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}